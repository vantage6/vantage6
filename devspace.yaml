version: v2beta1
name: vantage6git

vars:
  SERVER_IMAGE:
    question: Which image server image should be used?
    default: harbor2.vantage6.ai/infrastructure/server:5.0.0a0
  NODE_IMAGE:
    question: Which image node image should be used?
    default: harbor2.vantage6.ai/infrastructure/node:5.0.0a0
  NODE_CONFIG_FILE: null



# This is a list of `pipelines` that DevSpace can execute (you can define your own)
pipelines:
  # This is the pipeline for the main command: `devspace dev` (or `devspace run-pipeline dev`)
  dev:
    run: |-
      run_dependencies --all      # 1. Deploy any projects this project needs (see "dependencies")
      ensure_pull_secrets --all   # 2. Ensure pull secrets
      create_deployments vantage6-server vantage6-store vantage6-ui     # 3. Deploy Helm charts and manifests specfied as "deployments"
      start_dev vantage6-server # vantage6-store vantage6-ui

  node:
    run: |-
      create_deployments node
      # start_dev node

# This is a list of `images` that DevSpace can build for this project
# We recommend to skip image building during development (devspace dev) as much as possible
images:
  vantage6-server:
    image: ${SERVER_IMAGE}
    dockerfile: docker/node-and-server.Dockerfile
    context: .

  node:
    image: harbor2.vantage6.ai/infrastructure/node:5.0.0a0
    dockerfile: docker/node-and-server.Dockerfile
    context: .

# This is a list of `deployments` that DevSpace can create for this project
deployments:
  vantage6-server:
    # This deployment uses `kubectl` but you can also define `helm` deployments
    kubectl:
      manifests:
        - kube/server-namespace.yml
        - kube/server/*

  vantage6-store:
    kubectl:
      manifests:
        - kube/server-namespace.yml
        - kube/store/*

  vantage6-ui:
    kubectl:
      manifests:
        - kube/server-namespace.yml
        - kube/ui/*

  node:
    kubectl:
      manifests:
        - kube/node/namespace.yml
        - kube/node/*


# This is a list of `dev` containers that are based on the containers created by your deployments
dev:
  vantage6-server:

    # Search for the container that runs this image
    imageSelector: ${SERVER_IMAGE}
    namespace: vantage6-server

    sync:
    - path: ./vantage6/:/vantage6/vantage6/
      disableDownload: true
    - path: ./vantage6-common/:/vantage6/vantage6-common/
      disableDownload: true
    - path: ./vantage6-server/:/vantage6/vantage6-server/
      disableDownload: true
      # Make sure the container starts after syncing, this allows for modification of
      # the start scripts
      startContainer: true

    command: ["/bin/sh", "/vantage6/vantage6-server/dev_server.sh"]

    # Make the following commands from my local machine available inside the dev container
    proxyCommands:
      - command: devspace
      - command: kubectl

    #   - command: helm
    #   - gitCredentials: true
    # Forward the following ports to be able access your application via localhost
    ports:
      - port: 7601:7601

    # # Open the following URLs once they return an HTTP status code other than 502 or 503
    open:
      - url: http://localhost:8090

    logs:
      enabled: true

# Use the `commands` section to define repeatable dev workflows for this project
commands:
  load-basic-fixtures:
    command: "python dev/load-basic-fixtures.py"
  delete-basic-fixtures:
    command: "python dev/delete-basic-fixtures.py"
  start-nodes:
    command: v6 node start -c dev/.data/node_org_1.yaml --image ${NODE_IMAGE}
  stop-nodes:
    command: v6 node stop --all

# Define dependencies to other projects with a devspace.yaml
# dependencies:
#   api:
#     git: https://...  # Git-based dependencies
#     tag: v1.0.0
#   ui:
#     path: ./ui        # Path-based dependencies (for monorepos)
