keycloak:
  postgresql:
    enabled: true
    auth:
      postgresPassword: postgres
      password: keycloak
      database: keycloak

    # Add sidecar container to configure password policy after Keycloak is ready
  sidecars:
    - name: configure-password-policy
      image: curlimages/curl:latest
      command:
        - /bin/sh
        - -c
        - |
          echo "Waiting for Keycloak to be ready..."
          until curl -f -s http://localhost:8080; do
            echo "Keycloak not ready yet, waiting..."
            sleep 5
          done

          echo "Keycloak is ready, configuring password policy..."

          # Wait a bit more for the realm to be fully initialized
          sleep 10

          # Get admin token
          TOKEN=$(curl -s -X POST \
            -H "Content-Type: application/x-www-form-urlencoded" \
            -d "username=admin&password=admin&grant_type=password&client_id=admin-cli" \
            http://localhost:8080/realms/master/protocol/openid-connect/token | \
            grep -o '"access_token":"[^"]*"' | sed 's/"access_token":"//;s/"$//')

          if [ "$TOKEN" = "null" ] || [ -z "$TOKEN" ]; then
            echo "Failed to get admin token"
            exit 1
          fi

          # Configure password policy for the vantage6 realm
          curl -s -X PUT \
            -H "Authorization: Bearer $TOKEN" \
            -H "Content-Type: application/json" \
            -d '{
              "passwordPolicy": "length(8) and upperCase(1) and lowerCase(1) and digits(1) and specialChars(1)"
            }' \
            http://localhost:8080/admin/realms/vantage6

          echo "Password policy configured successfully"

          echo "Sleeping infinitely to avoid restart loops"
          sleep infinity
  auth:
    adminUser: admin
    adminPassword: admin
  keycloakConfigCli:
    enabled: true
    configuration:
      realm:
        # Keycloak realm name
        realm: vantage6
        enabled: true

        # access token lifespan in seconds
        accessTokenLifespan: 300
        # sso session idle timeout in seconds. With default settings, this value
        # controls the time before the refresh token expires. Note that if setting this
        # to >3600, you probably also need to set ssoSessionMaxLifespan and/or
        # clientSessionIdleTimeout and/or clientSessionMaxLifespan to higher values.
        ssoSessionIdleTimeout: 1800

        # required actions for users. By setting defaultAction to true for configuring
        # OTP, the user will be prompted to configure OTP on first login.
        requiredActions:
          - alias: CONFIGURE_TOTP
            name: Configure OTP
            providerId: CONFIGURE_TOTP
            enabled: true
            defaultAction: true
            priority: 10

        # users to be created in the realm. This initializes the realm with a default
        # admin user. It also initializes the service account for the backend admin
        # client to give it the necessary permissions to manage the realm.
        users:
          - username: admin
            enabled: true
            credentials:
              - type: password
                value: admin
            requiredActions:
              - CONFIGURE_TOTP
              - UPDATE_PASSWORD
          - username: service-account-backend-admin-client
            enabled: true
            serviceAccountClientId: backend-admin-client
            clientRoles:
              realm-management:
                - view-users
                - manage-users
                - view-clients
                - manage-clients
                - create-client

        # clients to be created in the realm. This initializes the realm with a default
        # public client and a backend admin client.
        clients:
          - clientId: public_client
            publicClient: true
            redirectUris:
              - "*"
            webOrigins:
              - "*"
            # The public client is only for users, not for nodes. Therefore, map a
            # constant claim to indicate the that the client is a user.
            protocolMappers:
              - name: vantage6_client_type
                protocol: openid-connect
                protocolMapper: oidc-hardcoded-claim-mapper
                consentRequired: false
                config:
                  claim.name: vantage6_client_type
                  claim.value: user
                  access.token.claim: true
          - clientId: backend-admin-client
            publicClient: false
            redirectUris:
              - "*"
            secret: myadminclientsecret
            serviceAccountsEnabled: true
            standardFlowEnabled: false
