# All the PODs on the node namespace have access to Internet
kind: NetworkPolicy
apiVersion: networking.k8s.io/v1
metadata:
  name: {{ .Release.Name }}-egress-isolation
  namespace: {{ .Values.namespace | default .Release.Namespace }}
spec:
  podSelector: {} # This selects all pods in the vantage6-node namespace
  policyTypes:
  - Egress
  egress:
  - {}


---

# DEFAULT policies for the 'tasks' namespace (inboud/outbound traffic blocked)
# DO NOT CHANGE
kind: NetworkPolicy
apiVersion: networking.k8s.io/v1
metadata:
  name: {{ .Release.Name }}-tasks-namespace-default-policy
  namespace: {{ .Values.node.taskNamespace }}
spec:
  podSelector: {}  # Selects all pods in the namespace
  policyTypes:
  - Ingress
  - Egress
  ingress: []
  egress: []

---

# Network policies for central_compute step/jobs
# These jobs require access to the server proxy provided by the node
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  name: {{ .Release.Name }}-central-compute-policy
  namespace: {{ .Values.node.taskNamespace }}
spec:
  podSelector:
    matchLabels:
      # The job pods must be created with this label
      role: central_compute
  policyTypes:
  - Egress
  egress:
  - to:
    # Allows outbound traffic only to PODs on the node namespace
    - namespaceSelector: 
        matchLabels:
          kubernetes.io/metadata.name: {{ .Values.namespace | default .Release.Namespace }}
    ports:
    # If numberOfNodes and and nodeProxyStartingPortNumber exist, this chart template is being
    # used within a dev environment (devspace), where multiple ports must be enabled
  {{- if and (hasKey .Values.node "numberOfNodes") (hasKey .Values.node "nodeProxyStartingPortNumber") }}
    {{- $start := int .Values.node.nodeProxyStartingPortNumber }}
    {{- $count := int .Values.node.numberOfNodes }}
    {{- range $i, $ := until $count }}
      - protocol: TCP
        port:  {{ add $start $i }}
    {{- end }}
    # Otherwise, use the standard proxyPort helm Chart variable
  {{- else }}
      - protocol: TCP
        port:  {{ .Values.node.proxyPort }}
  {{- end }}
  - to:
    - namespaceSelector:
        matchLabels:
          kubernetes.io/metadata.name: kube-system
    ports:
    - protocol: UDP
      port: 53
    - protocol: TCP
      port: 53


---

# Network policies for data_extraction jobs
# This kind of jobs may require access to external databases
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  name: {{ .Release.Name }}-data-extraction-policy
  namespace: {{ .Values.node.taskNamespace }}
spec:
  podSelector:
    matchLabels:
      role: data_extraction
  policyTypes:
  - Ingress
  - Egress
  ingress: []
  egress: []
  # # Example of how to 'whitelist' an external PostgreSQL database
  # # (outside the k8s cluster)
  # egress:  
  # - to:
  #   # Kubernetes NetworkPolicies do not support domain names or DNS-based rules directly
  #   - ipBlock:
  #       cidr: 203.0.113.25/32  # Replace with your actual Postgres server IP
  #   ports:
  #   - protocol: TCP
  #     port: 5432


# ---
# Uncomment and customize for federate_compute actions

# Network policies for federated_compute step/jobs
# This kind of jobs may require database access
# apiVersion: networking.k8s.io/v1
# kind: NetworkPolicy
# metadata:
#   name: {{ .Release.Name }}-federated-compute-policy
#   namespace: {{ .Values.node.taskNamespace }}
# spec:
#   podSelector:
#     matchLabels:
#       role: federated_compute
#   policyTypes:
#   - Ingress
#   - Egress
#   ingress: []
#   egress: []
