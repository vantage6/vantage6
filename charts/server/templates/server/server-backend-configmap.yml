apiVersion: v1
kind: ConfigMap
metadata:
  name: {{ .Release.Name }}-vantage6-server-config
  namespace: {{ .Values.namespace | default .Release.Namespace }}
data:
  config.yaml: |
    algorithm_stores: []
    api_path: {{ .Values.server.apiPath }}
    description: {{ .Values.server.description }}
    {{- if .Values.server.jwt }}
    {{- if .Values.server.jwt.secret }}
    jwt_secret_key: {{ .Values.server.jwt.secret }}
    {{- end }}
    {{- end }}
    logging:
      backup_count: {{ .Values.server.logging.backup_count }}
      datefmt: {{ .Values.server.logging.datefmt | quote }}
      file: {{ .Values.server.logging.file }}
      format: {{ .Values.server.logging.format | quote }}
      level: {{ .Values.server.logging.level }}
      loggers:
      {{- range .Values.server.logging.loggers }}
      - level: {{ .level }}
        name: {{ .name }}
      {{- end }}
      max_size: {{ .Values.server.logging.max_size }}
      use_console: {{ .Values.server.logging.use_console }}
    port: {{ .Values.server.internal.port }}
    server_url: {{ .Values.server.baseUrl }}{{ .Values.server.apiPath }}
    {{- if .Values.server.database_uri }}
    uri: {{ .Values.server.database_uri }}
    {{- else if .Values.database.username }}
    uri: postgresql://{{ .Values.database.username }}:{{ .Values.database.password }}@{{ .Release.Name }}-postgres-service:5432/{{ .Values.database.name }}
    {{- else }}
    uri: ""
    {{- end }}
    {{- if .Values.server.cors_allowed_origins }}
    cors_allowed_origins:
      {{- range .Values.server.cors_allowed_origins }}
      - {{ . }}
      {{- end }}
    {{- end }}
    {{- if .Values.rabbitmq }}
    rabbitmq:
      uri: amqp://{{ .Values.rabbitmq.username }}:{{ .Values.rabbitmq.password }}@{{ .Release.Name }}-rabbitmq-service:5672/{{ .Values.rabbitmq.vhost }}
    {{- end }}
    {{- if .Values.server.dev.host_uri }}
    dev:
      host_uri: {{ .Values.server.dev.host_uri }}
    {{- end }}
    keycloak:
      {{- if hasKey .Values.server.keycloak "manage_users_and_nodes" }}
      manage_users_and_nodes: {{ .Values.server.keycloak.manage_users_and_nodes }}
      {{- else }}
      manage_users_and_nodes: true
      {{- end }}
    {{- if .Values.server.algorithm_stores }}
    algorithm_stores:
      {{- range .Values.server.algorithm_stores }}
      - name: {{ .name }}
        url: {{ .url }}
      {{- end }}
    {{- end }}
    {{- if .Values.server.runs_data_cleanup_days }}
    runs_data_cleanup_days: {{ .Values.server.runs_data_cleanup_days }}
    {{- end }}
    {{- if .Values.server.runs_data_cleanup_include_args }}
    runs_data_cleanup_include_args: {{ .Values.server.runs_data_cleanup_include_args }}
    {{- end }}
    {{- if .Values.server.prometheus }}
    {{- if .Values.server.prometheus.enabled }}
    prometheus:
      enabled: {{ .Values.server.prometheus.enabled }}
      {{- if .Values.server.prometheus.start_with_server }}
      start_with_server: {{ .Values.server.prometheus.start_with_server }}
      {{- end }}
      {{- if .Values.server.prometheus.exporter_port }}
      exporter_port: {{ .Values.server.prometheus.exporter_port }}
      {{- end }}
    {{- end }}
    {{- end }}